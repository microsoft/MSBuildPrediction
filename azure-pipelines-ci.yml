variables:
  BuildConfiguration: Release
  BuildPlatform: 'Any CPU'
  LogDirectory: $(Build.ArtifactStagingDirectory)\logs
  ArtifactsDirectory: $(Build.ArtifactStagingDirectory)\artifacts
  SignType: 'Test'

schedules:
- cron: '0 0 * * *'
  displayName: Daily midnight build
  branches:
    include:
    - main

trigger:
  batch: true
  branches:
    include:
    - main
  paths:
    exclude:
    - '*.md'

strategy:
  matrix:
    windows-net472:
      VmImage: windows-latest
      DotNetVersion: 7.x
    windows-netcoreapp3.1:
      VmImage: windows-latest
      DotNetVersion: 3.1.x
    windows-net5.0:
      VmImage: windows-latest
      DotNetVersion: 5.x
    windows-net6.0:
      VmImage: windows-latest
      DotNetVersion: 6.x
    windows-net7.0:
      VmImage: windows-latest
      DotNetVersion: 7.x
    linux-netcoreapp3.1:
      VmImage: ubuntu-latest
      DotNetVersion: 3.1.x
    linux-net5.0:
      VmImage: ubuntu-latest
      DotNetVersion: 5.x
    linux-net6.0:
      VmImage: ubuntu-latest
      DotNetVersion: 6.x
    linux-net7.0:
      VmImage: ubuntu-latest
      DotNetVersion: 7.x
    macOS-netcoreapp3.1:
      VmImage: macOS-latest
      DotNetVersion: 3.1.x
    macOS-net5.0:
      VmImage: macOS-latest
      DotNetVersion: 5.x
    macOS-net6.0:
      VmImage: macOS-latest
      DotNetVersion: 6.x
    macOS-net7.0:
      VmImage: macOS-latest
      DotNetVersion: 7.x

pool:
  vmImage: $(VmImage)

steps:
  - task: UseDotNet@2
    displayName: Install .NET $(DotNetVersion)
    inputs:
      version: $(DotNetVersion)

  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: MSBuildPrediction.sln

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      projects: MSBuildPrediction.sln
      arguments: -restore:false --configuration $(BuildConfiguration) -BinaryLogger:$(LogDirectory)/msbuild.binlog

  - task: DotNetCoreCLI@2
    displayName: Run Unit Tests
    inputs:
      command: test
      arguments: --no-restore --no-build --configuration $(BuildConfiguration)

  - task: PublishBuildArtifacts@1
    displayName: Publish Artifacts
    inputs:
      PathtoPublish: $(ArtifactsDirectory)
      ArtifactName: $(Agent.JobName)
    condition: always()

  - task: PublishBuildArtifacts@1
    displayName: Publish Logs
    inputs:
      PathtoPublish: $(LogDirectory)
      ArtifactName: $(Agent.JobName)-logs
    condition: always()