<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net472;netcoreapp3.1;net5.0;net6.0</TargetFrameworks>
    <ArtifactsPath>$(BaseArtifactsPath)\$(MSBuildProjectName)</ArtifactsPath>
    <MicrosoftBuildPackageVersion>17.0.0</MicrosoftBuildPackageVersion>
    <MicrosoftBuildPackageVersion Condition="'$(TargetFramework)' == 'net5.0'">16.11.0</MicrosoftBuildPackageVersion>
    <MicrosoftBuildPackageVersion Condition="'$(TargetFramework)' == 'netcoreapp3.1'">16.9.0</MicrosoftBuildPackageVersion>
  </PropertyGroup>
  <!-- Packaging -->
  <PropertyGroup>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Title>MSBuild Prediction</Title>
    <Description>A library to predict inputs and outputs of MSBuild projects</Description>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Build" Version="$(MicrosoftBuildPackageVersion)" />
    <PackageReference Include="Microsoft.Build.Framework" Version="$(MicrosoftBuildPackageVersion)" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="$(MicrosoftBuildPackageVersion)" />
    <PackageReference Include="Microsoft.VisualStudioEng.MicroBuild.Core" Version="1.0.0" PrivateAssets="all" />
    <PackageReference Include="Nerdbank.GitVersioning" Version="3.4.255" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Microsoft.Build.Prediction.Tests" />
  </ItemGroup>

  <!-- Signing -->
  <ItemGroup>
    <FilesToSign Include="$(TargetPath)" Authenticode="Microsoft400" StrongName="StrongName" />
  </ItemGroup>
  <!-- This needs to evaluate in a target since the package version is calculated dynamically in GetBuildVersion -->
  <Target Name="GetSnupkgSignNuGetPackFiles" BeforeTargets="SignNuGetPackage" AfterTargets="GetBuildVersion">
    <ItemGroup>
      <SignNuGetPackFiles Include="$(PackageOutputPath)\$(AssemblyName).$(PackageVersion).snupkg" />
    </ItemGroup>
  </Target>
</Project>
